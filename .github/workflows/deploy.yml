name: Global Infrastructure and Deployment

permissions:
    contents: read
    id-token: write

on:
    workflow_dispatch:
    push:
        branches: ["dev", "main"]
        paths:
            - "infra/**"
            - "services/**"
            - ".github/workflows/**"
    repository_dispatch:
        types: ["deploy-service"]

jobs:
    # GLOBAL INFRASTRUCTURE & DEPLOYMENT JOB
    infra-deploy:
        runs-on: ubuntu-latest
        if: ${{ github.event_name != 'repository_dispatch' }}

        env:
            AWS_REGION: us-east-1
            ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}

        steps:
            - name: Checkout Repository with Submodules
              uses: actions/checkout@v4
              with:
                  submodules: true

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_TERRAFORM }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v2
              with:
                  terraform_version: 1.13.4

            - name: Initialize Terraform
              run: |
                  cd infra/terraform
                  terraform init -input=false

            - name: Terraform Apply
              run: |
                  cd infra/terraform
                  terraform apply -auto-approve

            - name: Fetch ECR Repositories
              id: ecr
              run: |
                  cd infra/terraform
                  terraform output -json ecr_repositories > ecr.json
              #   cat ecr.json

            - name: Update Kubeconfig for EKS
              run: |
                  aws eks update-kubeconfig --region $AWS_REGION --name insightric-cluster

            - name: Apply AWS Auth ConfigMap
              env:
                  NODE_ROLE_ARN: ${{ secrets.AWS_ROLE_TO_ASSUME_TERRAFORM }}
                  GHA_ROLE_ARN: ${{ secrets.AWS_ROLE_TO_ASSUME }}
              run: |
                  echo "Creating/updating aws-auth ConfigMap..."
                  cat <<EOF > aws-auth.yaml
                  apiVersion: v1
                  kind: ConfigMap
                  metadata:
                    name: aws-auth
                    namespace: kube-system
                  data:
                    mapRoles: |
                      - rolearn: $NODE_ROLE_ARN
                        username: system:node:{{EC2PrivateDNSName}}
                        groups:
                          - system:bootstrappers
                          - system:nodes
                      - rolearn: $GHA_ROLE_ARN
                        username: github-actions
                        groups:
                          - system:masters
                  EOF

                  kubectl apply -f aws-auth.yaml

            - name: Replace ECR URLs in manifests
              run: |
                  ECR_JSON="infra/terraform/ecr.json"
                  echo "Injecting real ECR URLs into deployment manifests..."
                  for service in $(cat $ECR_JSON | jq -r 'keys[]'); do
                    echo "Patching $service â†’ $REPO"
                    REPO=$(cat $ECR_JSON | jq -r --arg s "$service" '.[$s]')
                    echo "Replacing IMAGE_PLACEHOLDER with $REPO:latest"
                    echo infra/kubernetes/deployments/$service.yaml
                    sed -i "s|IMAGE_PLACEHOLDER|$REPO:latest|g" infra/kubernetes/deployments/$service.yaml
                  done

            - name: Deploy to Kubernetes
              run: |
                  for file in infra/kubernetes/deployments/*.yaml; do
                    kubectl apply -f "$file"
                  done
                  for file in infra/kubernetes/services/*.yaml; do
                    kubectl apply -f "$file"
                  done

    # LIGHTWEIGHT REDEPLOY JOB
    deploy-service:
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'repository_dispatch' }}

        env:
            AWS_REGION: us-east-1

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                  submodules: true

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Update Kubeconfig for EKS
              run: aws eks update-kubeconfig --region $AWS_REGION --name insightric-cluster

            - name: Update Kubernetes Deployment
              env:
                  AWS_REGION: ${{ env.AWS_REGION }}
              run: |
                  SERVICE_NAME="${{ github.event.client_payload.service }}"
                  IMAGE="${{ github.event.client_payload.image }}"

                  echo "Updating $SERVICE_NAME with image $IMAGE"

                  kubectl set image deployment/$SERVICE_NAME \
                      $SERVICE_NAME=$IMAGE --record
            - name: Verify Health Endpoints
              run: |
                  chmod +x scripts/check_health.sh
                  ./scripts/check_health.sh
